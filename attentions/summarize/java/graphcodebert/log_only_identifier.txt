06/23/2022 02:44:35 - WARNING - configs -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False, cpu count: 48
06/23/2022 02:44:35 - INFO - __main__ -   Namespace(adam_epsilon=1e-08, add_lang_ids=False, add_task_prefix=False, always_save_model=True, attention_batch_size=100, batch_size=48, beam_size=10, cache_path='save_models/summarize/java/graphcodebert/cache_data', cpu_count=48, data_dir='/data/pretrain-attention/CodeAttention/data', data_num=-1, device=device(type='cuda'), do_eval=True, do_eval_bleu=True, do_test=True, do_train=True, frequent_type=True, gpu=0, gradient_accumulation_steps=1, layer_num=-1, local_rank=-1, lr=5e-05, max_grad_norm=1.0, max_source_length=256, max_target_length=128, model_dir='saved_models', model_name='graphcodebert', n_gpu=1, no_cuda=False, num_train_epochs=15, output_dir='save_models/summarize/java/graphcodebert', patience=2, pickle_suffix='.pickle', quantile_threshold=0.75, res_dir='results/summarize/java/graphcodebert', res_fn='results/summarize/java/graphcodebert.txt', save_last_checkpoints=True, seed=1234, start_epoch=0, sub_task='java', summary_dir='tensorboard', task='summarize', upgraded_ast=True, warmup_steps=1000, weight_decay=0.0)
Some weights of the model checkpoint at /data/huggingface_models/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.dense.weight', 'lm_head.decoder.weight', 'lm_head.decoder.bias', 'lm_head.dense.bias', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight', 'lm_head.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at /data/huggingface_models/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
06/23/2022 02:44:37 - INFO - models -   Finish loading model [173M] parameters from graphcodebert
frequent_type or not: True
upgraded_ast or not: True
06/23/2022 02:44:53 - INFO - utils -   Read 3000 examples, avg src len: 99, avg trg len: 13, max src len: 512, max trg len: 103
06/23/2022 02:44:53 - INFO - utils -   Sample 5k data for computing bleu/attention from /data/pretrain-attention/CodeAttention/data/summarize/java/train.jsonl
  0%|          | 0/3000 [00:00<?, ?it/s]  1%|1         | 32/3000 [00:00<00:11, 252.08it/s]  3%|2         | 80/3000 [00:00<00:09, 322.53it/s]  4%|4         | 128/3000 [00:00<00:08, 340.19it/s]  6%|5         | 176/3000 [00:00<00:08, 349.89it/s]  7%|7         | 224/3000 [00:00<00:07, 357.49it/s]  9%|9         | 272/3000 [00:00<00:07, 356.97it/s] 11%|#         | 320/3000 [00:00<00:07, 359.29it/s] 12%|#2        | 368/3000 [00:01<00:07, 360.81it/s] 14%|#3        | 416/3000 [00:01<00:06, 372.51it/s] 15%|#5        | 464/3000 [00:01<00:06, 384.87it/s] 17%|#7        | 512/3000 [00:01<00:06, 393.08it/s] 19%|#8        | 560/3000 [00:01<00:05, 410.45it/s] 20%|##        | 602/3000 [00:01<00:06, 396.81it/s] 21%|##1       | 642/3000 [00:01<00:06, 367.88it/s] 23%|##2       | 688/3000 [00:01<00:06, 352.22it/s] 25%|##4       | 736/3000 [00:02<00:06, 358.17it/s] 26%|##6       | 784/3000 [00:02<00:06, 339.20it/s] 28%|##7       | 832/3000 [00:02<00:07, 282.67it/s] 29%|##8       | 864/3000 [00:02<00:07, 281.22it/s] 30%|###       | 912/3000 [00:02<00:06, 308.32it/s] 32%|###2      | 960/3000 [00:02<00:06, 328.73it/s] 34%|###3      | 1008/3000 [00:02<00:05, 344.11it/s] 35%|###5      | 1056/3000 [00:03<00:05, 355.38it/s] 37%|###6      | 1104/3000 [00:03<00:05, 362.33it/s] 38%|###8      | 1152/3000 [00:03<00:05, 368.16it/s] 40%|####      | 1200/3000 [00:03<00:04, 367.83it/s] 42%|####1     | 1248/3000 [00:03<00:04, 374.46it/s] 43%|####3     | 1296/3000 [00:03<00:04, 397.48it/s] 45%|####4     | 1344/3000 [00:03<00:03, 417.61it/s] 46%|####6     | 1392/3000 [00:03<00:03, 426.85it/s] 48%|####8     | 1440/3000 [00:03<00:03, 410.86it/s] 50%|####9     | 1488/3000 [00:04<00:03, 419.33it/s] 51%|#####1    | 1536/3000 [00:04<00:03, 422.03it/s] 53%|#####2    | 1584/3000 [00:04<00:03, 427.56it/s] 54%|#####4    | 1632/3000 [00:04<00:03, 425.42it/s] 56%|#####6    | 1680/3000 [00:04<00:03, 430.36it/s] 58%|#####7    | 1728/3000 [00:04<00:02, 428.93it/s] 59%|#####9    | 1776/3000 [00:04<00:02, 430.53it/s] 61%|######    | 1824/3000 [00:04<00:02, 432.64it/s] 62%|######2   | 1872/3000 [00:04<00:02, 417.31it/s] 64%|######4   | 1920/3000 [00:05<00:02, 421.73it/s] 66%|######5   | 1968/3000 [00:05<00:02, 426.97it/s] 67%|######7   | 2016/3000 [00:05<00:02, 397.78it/s] 69%|######8   | 2064/3000 [00:05<00:02, 406.15it/s] 70%|#######   | 2112/3000 [00:05<00:02, 416.10it/s] 72%|#######2  | 2160/3000 [00:05<00:01, 426.84it/s] 74%|#######4  | 2224/3000 [00:05<00:01, 440.60it/s] 76%|#######5  | 2272/3000 [00:05<00:01, 443.36it/s] 77%|#######7  | 2320/3000 [00:06<00:01, 434.07it/s] 79%|#######9  | 2384/3000 [00:06<00:01, 452.15it/s] 82%|########1 | 2448/3000 [00:06<00:01, 474.83it/s] 84%|########3 | 2512/3000 [00:06<00:00, 497.46it/s] 86%|########5 | 2576/3000 [00:06<00:00, 520.19it/s] 88%|########8 | 2640/3000 [00:06<00:00, 519.81it/s] 90%|######### | 2704/3000 [00:06<00:00, 529.27it/s] 92%|#########2| 2768/3000 [00:06<00:00, 535.54it/s] 94%|#########4| 2832/3000 [00:06<00:00, 545.71it/s] 97%|#########6| 2896/3000 [00:07<00:00, 541.84it/s] 99%|#########8| 2960/3000 [00:07<00:00, 532.80it/s]100%|##########| 3000/3000 [00:07<00:00, 412.02it/s]
06/23/2022 02:45:01 - INFO - __main__ -   Parse AST trees and obtain leaf tokens
Getting ast and token:   0%|          | 0/3000 [00:00<?, ?it/s]leaf:  3 start:  (0, 0) , end:  (0, 7) , token:  private
leaf:  4 start:  (0, 8) , end:  (0, 14) , token:  String
leaf:  6 start:  (0, 15) , end:  (0, 39) , token:  buildMarkupBuilderScript
leaf:  7 start:  (0, 39) , end:  (0, 39) , token:  
leaf:  10 start:  (0, 39) , end:  (0, 40) , token:  (
leaf:  12 start:  (0, 40) , end:  (0, 46) , token:  String
leaf:  13 start:  (0, 47) , end:  (0, 57) , token:  scriptData
leaf:  14 start:  (0, 57) , end:  (0, 58) , token:  )
leaf:  16 start:  (0, 59) , end:  (0, 60) , token:  {
leaf:  18 start:  (1, 8) , end:  (1, 11) , token:  try
leaf:  20 start:  (1, 12) , end:  (1, 13) , token:  {
leaf:  22 start:  (2, 12) , end:  (2, 23) , token:  ClassLoader
leaf:  24 start:  (2, 24) , end:  (2, 30) , token:  parent
leaf:  25 start:  (2, 31) , end:  (2, 32) , token:  =
leaf:  28 start:  (2, 33) , end:  (2, 59) , token:  GroovyScriptMessageBuilder
leaf:  29 start:  (2, 59) , end:  (2, 60) , token:  .
leaf:  30 start:  (2, 60) , end:  (2, 65) , token:  class
leaf:  31 start:  (2, 65) , end:  (2, 66) , token:  .
leaf:  32 start:  (2, 66) , end:  (2, 80) , token:  getClassLoader
leaf:  34 start:  (2, 80) , end:  (2, 81) , token:  (
leaf:  35 start:  (2, 81) , end:  (2, 82) , token:  )
leaf:  36 start:  (2, 82) , end:  (2, 83) , token:  ;
leaf:  38 start:  (3, 12) , end:  (3, 29) , token:  GroovyClassLoader
leaf:  40 start:  (3, 30) , end:  (3, 36) , token:  loader
leaf:  41 start:  (3, 37) , end:  (3, 38) , token:  =
leaf:  43 start:  (3, 39) , end:  (3, 42) , token:  new
leaf:  44 start:  (3, 43) , end:  (3, 60) , token:  GroovyClassLoader
leaf:  46 start:  (3, 60) , end:  (3, 61) , token:  (
leaf:  47 start:  (3, 61) , end:  (3, 67) , token:  parent
leaf:  48 start:  (3, 67) , end:  (3, 68) , token:  )
leaf:  49 start:  (3, 68) , end:  (3, 69) , token:  ;
leaf:  52 start:  (5, 12) , end:  (5, 17) , token:  Class
leaf:  54 start:  (5, 17) , end:  (5, 18) , token:  <
leaf:  56 start:  (5, 18) , end:  (5, 19) , token:  ?
leaf:  57 start:  (5, 19) , end:  (5, 20) , token:  >
leaf:  59 start:  (5, 21) , end:  (5, 32) , token:  groovyClass
leaf:  60 start:  (5, 33) , end:  (5, 34) , token:  =
leaf:  62 start:  (5, 35) , end:  (5, 41) , token:  loader
leaf:  63 start:  (5, 41) , end:  (5, 42) , token:  .
leaf:  64 start:  (5, 42) , end:  (5, 52) , token:  parseClass
leaf:  66 start:  (5, 52) , end:  (5, 53) , token:  (
leaf:  70 start:  (5, 53) , end:  (5, 79) , token:  TemplateBasedScriptBuilder
leaf:  71 start:  (5, 79) , end:  (5, 80) , token:  .
leaf:  72 start:  (5, 80) , end:  (5, 100) , token:  fromTemplateResource
leaf:  74 start:  (5, 100) , end:  (5, 101) , token:  (
leaf:  75 start:  (5, 101) , end:  (5, 123) , token:  scriptTemplateResource
leaf:  76 start:  (5, 123) , end:  (5, 124) , token:  )
leaf:  77 start:  (6, 60) , end:  (6, 61) , token:  .
leaf:  78 start:  (6, 61) , end:  (6, 69) , token:  withCode
leaf:  80 start:  (6, 69) , end:  (6, 70) , token:  (
leaf:  81 start:  (6, 70) , end:  (6, 80) , token:  scriptData
leaf:  82 start:  (6, 80) , end:  (6, 81) , token:  )
leaf:  83 start:  (7, 60) , end:  (7, 61) , token:  .
leaf:  84 start:  (7, 61) , end:  (7, 66) , token:  build
leaf:  86 start:  (7, 66) , end:  (7, 67) , token:  (
leaf:  87 start:  (7, 67) , end:  (7, 68) , token:  )
leaf:  88 start:  (7, 68) , end:  (7, 69) , token:  )
leaf:  89 start:  (7, 69) , end:  (7, 70) , token:  ;
leaf:  91 start:  (9, 12) , end:  (9, 14) , token:  if
leaf:  93 start:  (9, 15) , end:  (9, 16) , token:  (
leaf:  95 start:  (9, 16) , end:  (9, 27) , token:  groovyClass
leaf:  96 start:  (9, 28) , end:  (9, 30) , token:  ==
leaf:  97 start:  (9, 31) , end:  (9, 35) , token:  null
leaf:  98 start:  (9, 35) , end:  (9, 36) , token:  )
leaf:  100 start:  (9, 37) , end:  (9, 38) , token:  {
leaf:  102 start:  (10, 16) , end:  (10, 21) , token:  throw
leaf:  104 start:  (10, 22) , end:  (10, 25) , token:  new
leaf:  105 start:  (10, 26) , end:  (10, 48) , token:  CitrusRuntimeException
leaf:  107 start:  (10, 48) , end:  (10, 49) , token:  (
leaf:  108 start:  (10, 49) , end:  (10, 80) , token:  "Could not load groovy script!"
leaf:  109 start:  (10, 80) , end:  (10, 81) , token:  )
leaf:  110 start:  (10, 81) , end:  (10, 82) , token:  ;
leaf:  111 start:  (11, 12) , end:  (11, 13) , token:  }
leaf:  113 start:  (13, 12) , end:  (13, 24) , token:  GroovyObject
leaf:  115 start:  (13, 25) , end:  (13, 37) , token:  groovyObject
leaf:  116 start:  (13, 38) , end:  (13, 39) , token:  =
leaf:  118 start:  (13, 40) , end:  (13, 41) , token:  (
leaf:  119 start:  (13, 41) , end:  (13, 53) , token:  GroovyObject
leaf:  120 start:  (13, 53) , end:  (13, 54) , token:  )
leaf:  122 start:  (13, 55) , end:  (13, 66) , token:  groovyClass
leaf:  123 start:  (13, 66) , end:  (13, 67) , token:  .
leaf:  124 start:  (13, 67) , end:  (13, 78) , token:  newInstance
leaf:  126 start:  (13, 78) , end:  (13, 79) , token:  (
leaf:  127 start:  (13, 79) , end:  (13, 80) , token:  )
leaf:  128 start:  (13, 80) , end:  (13, 81) , token:  ;
leaf:  130 start:  (14, 12) , end:  (14, 18) , token:  return
leaf:  132 start:  (14, 19) , end:  (14, 20) , token:  (
leaf:  133 start:  (14, 20) , end:  (14, 26) , token:  String
leaf:  134 start:  (14, 26) , end:  (14, 27) , token:  )
leaf:  136 start:  (14, 28) , end:  (14, 40) , token:  groovyObject
leaf:  137 start:  (14, 40) , end:  (14, 41) , token:  .
leaf:  138 start:  (14, 41) , end:  (14, 53) , token:  invokeMethod
leaf:  140 start:  (14, 53) , end:  (14, 54) , token:  (
leaf:  141 start:  (14, 54) , end:  (14, 59) , token:  "run"
leaf:  142 start:  (14, 59) , end:  (14, 60) , token:  ,
leaf:  144 start:  (14, 61) , end:  (14, 64) , token:  new
leaf:  145 start:  (14, 65) , end:  (14, 71) , token:  Object
leaf:  147 start:  (14, 71) , end:  (14, 72) , token:  [
leaf:  148 start:  (14, 72) , end:  (14, 73) , token:  ]
leaf:  150 start:  (14, 74) , end:  (14, 75) , token:  {
leaf:  151 start:  (14, 75) , end:  (14, 76) , token:  }
leaf:  152 start:  (14, 76) , end:  (14, 77) , token:  )
leaf:  153 start:  (14, 77) , end:  (14, 78) , token:  ;
leaf:  154 start:  (15, 8) , end:  (15, 9) , token:  }
leaf:  156 start:  (15, 10) , end:  (15, 15) , token:  catch
leaf:  157 start:  (15, 16) , end:  (15, 17) , token:  (
leaf:  160 start:  (15, 17) , end:  (15, 43) , token:  CompilationFailedException
leaf:  161 start:  (15, 44) , end:  (15, 45) , token:  e
leaf:  162 start:  (15, 45) , end:  (15, 46) , token:  )
leaf:  164 start:  (15, 47) , end:  (15, 48) , token:  {
leaf:  166 start:  (16, 12) , end:  (16, 17) , token:  throw
leaf:  168 start:  (16, 18) , end:  (16, 21) , token:  new
leaf:  169 start:  (16, 22) , end:  (16, 44) , token:  CitrusRuntimeException
leaf:  171 start:  (16, 44) , end:  (16, 45) , token:  (
leaf:  172 start:  (16, 45) , end:  (16, 46) , token:  e
leaf:  173 start:  (16, 46) , end:  (16, 47) , token:  )
leaf:  174 start:  (16, 47) , end:  (16, 48) , token:  ;
leaf:  175 start:  (17, 8) , end:  (17, 9) , token:  }
leaf:  177 start:  (17, 10) , end:  (17, 15) , token:  catch
leaf:  178 start:  (17, 16) , end:  (17, 17) , token:  (
leaf:  181 start:  (17, 17) , end:  (17, 39) , token:  InstantiationException
leaf:  182 start:  (17, 40) , end:  (17, 41) , token:  e
leaf:  183 start:  (17, 41) , end:  (17, 42) , token:  )
leaf:  185 start:  (17, 43) , end:  (17, 44) , token:  {
leaf:  187 start:  (18, 12) , end:  (18, 17) , token:  throw
leaf:  189 start:  (18, 18) , end:  (18, 21) , token:  new
leaf:  190 start:  (18, 22) , end:  (18, 44) , token:  CitrusRuntimeException
leaf:  192 start:  (18, 44) , end:  (18, 45) , token:  (
leaf:  193 start:  (18, 45) , end:  (18, 46) , token:  e
leaf:  194 start:  (18, 46) , end:  (18, 47) , token:  )
leaf:  195 start:  (18, 47) , end:  (18, 48) , token:  ;
leaf:  196 start:  (19, 8) , end:  (19, 9) , token:  }
leaf:  198 start:  (19, 10) , end:  (19, 15) , token:  catch
leaf:  199 start:  (19, 16) , end:  (19, 17) , token:  (
leaf:  202 start:  (19, 17) , end:  (19, 39) , token:  IllegalAccessException
leaf:  203 start:  (19, 40) , end:  (19, 41) , token:  e
leaf:  204 start:  (19, 41) , end:  (19, 42) , token:  )
leaf:  206 start:  (19, 43) , end:  (19, 44) , token:  {
leaf:  208 start:  (20, 12) , end:  (20, 17) , token:  throw
leaf:  210 start:  (20, 18) , end:  (20, 21) , token:  new
leaf:  211 start:  (20, 22) , end:  (20, 44) , token:  CitrusRuntimeException
leaf:  213 start:  (20, 44) , end:  (20, 45) , token:  (
leaf:  214 start:  (20, 45) , end:  (20, 46) , token:  e
leaf:  215 start:  (20, 46) , end:  (20, 47) , token:  )
leaf:  216 start:  (20, 47) , end:  (20, 48) , token:  ;
leaf:  217 start:  (21, 8) , end:  (21, 9) , token:  }
leaf:  218 start:  (22, 4) , end:  (22, 5) , token:  }
0 th code of T:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218]
[(0, 1), (0, 8), (0, 15), (1, 2), (1, 4), (1, 5), (1, 7), (2, 3), (5, 6), (8, 9), (9, 10), (9, 11), (9, 14), (11, 12), (11, 13), (15, 16), (15, 17), (15, 218), (17, 18), (17, 19), (17, 155), (17, 176), (17, 197), (19, 20), (19, 21), (19, 37), (19, 50), (19, 90), (19, 112), (19, 129), (19, 154), (21, 22), (21, 23), (21, 36), (23, 24), (23, 25), (23, 26), (26, 27), (26, 31), (26, 32), (26, 33), (27, 28), (27, 29), (27, 30), (33, 34), (33, 35), (37, 38), (37, 39), (37, 49), (39, 40), (39, 41), (39, 42), (42, 43), (42, 44), (42, 45), (45, 46), (45, 47), (45, 48), (50, 51), (50, 58), (50, 89), (51, 52), (51, 53), (53, 54), (53, 55), (53, 57), (55, 56), (58, 59), (58, 60), (58, 61), (61, 62), (61, 63), (61, 64), (61, 65), (65, 66), (65, 67), (65, 88), (67, 68), (67, 83), (67, 84), (67, 85), (68, 69), (68, 77), (68, 78), (68, 79), (69, 70), (69, 71), (69, 72), (69, 73), (73, 74), (73, 75), (73, 76), (79, 80), (79, 81), (79, 82), (85, 86), (85, 87), (90, 91), (90, 92), (90, 99), (92, 93), (92, 94), (92, 98), (94, 95), (94, 96), (94, 97), (99, 100), (99, 101), (99, 111), (101, 102), (101, 103), (101, 110), (103, 104), (103, 105), (103, 106), (106, 107), (106, 108), (106, 109), (112, 113), (112, 114), (112, 128), (114, 115), (114, 116), (114, 117), (117, 118), (117, 119), (117, 120), (117, 121), (121, 122), (121, 123), (121, 124), (121, 125), (125, 126), (125, 127), (129, 130), (129, 131), (129, 153), (131, 132), (131, 133), (131, 134), (131, 135), (135, 136), (135, 137), (135, 138), (135, 139), (139, 140), (139, 141), (139, 142), (139, 143), (139, 152), (143, 144), (143, 145), (143, 146), (143, 149), (146, 147), (146, 148), (149, 150), (149, 151), (155, 156), (155, 157), (155, 158), (155, 162), (155, 163), (158, 159), (158, 161), (159, 160), (163, 164), (163, 165), (163, 175), (165, 166), (165, 167), (165, 174), (167, 168), (167, 169), (167, 170), (170, 171), (170, 172), (170, 173), (176, 177), (176, 178), (176, 179), (176, 183), (176, 184), (179, 180), (179, 182), (180, 181), (184, 185), (184, 186), (184, 196), (186, 187), (186, 188), (186, 195), (188, 189), (188, 190), (188, 191), (191, 192), (191, 193), (191, 194), (197, 198), (197, 199), (197, 200), (197, 204), (197, 205), (200, 201), (200, 203), (201, 202), (205, 206), (205, 207), (205, 217), (207, 208), (207, 209), (207, 216), (209, 210), (209, 211), (209, 212), (212, 213), (212, 214), (212, 215)]
0 th code of sast T:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218]
[(0, 1), (0, 8), (0, 15), (1, 2), (1, 4), (1, 5), (1, 7), (2, 3), (3, 4), (4, 6), (5, 6), (6, 7), (7, 10), (8, 9), (9, 10), (9, 11), (9, 14), (10, 12), (11, 12), (11, 13), (12, 13), (13, 14), (13, 81), (14, 16), (15, 16), (15, 17), (15, 218), (16, 18), (17, 18), (17, 19), (17, 155), (17, 176), (17, 197), (18, 20), (19, 20), (19, 21), (19, 37), (19, 50), (19, 90), (19, 112), (19, 129), (19, 154), (20, 22), (21, 22), (21, 23), (21, 36), (22, 24), (23, 24), (23, 25), (23, 26), (24, 25), (24, 47), (25, 28), (26, 27), (26, 31), (26, 32), (26, 33), (27, 28), (27, 29), (27, 30), (28, 29), (29, 30), (30, 31), (31, 32), (32, 34), (33, 34), (33, 35), (34, 35), (35, 36), (36, 38), (37, 38), (37, 39), (37, 49), (38, 40), (39, 40), (39, 41), (39, 42), (40, 41), (40, 62), (41, 43), (42, 43), (42, 44), (42, 45), (43, 44), (44, 46), (45, 46), (45, 47), (45, 48), (46, 47), (47, 48), (48, 49), (49, 52), (50, 51), (50, 58), (50, 89), (51, 52), (51, 53), (52, 54), (53, 54), (53, 55), (53, 57), (54, 56), (55, 56), (56, 57), (57, 59), (58, 59), (58, 60), (58, 61), (59, 60), (59, 95), (60, 62), (61, 62), (61, 63), (61, 64), (61, 65), (62, 63), (63, 64), (64, 66), (65, 66), (65, 67), (65, 88), (66, 70), (67, 68), (67, 83), (67, 84), (67, 85), (68, 69), (68, 77), (68, 78), (68, 79), (69, 70), (69, 71), (69, 72), (69, 73), (70, 71), (71, 72), (72, 74), (73, 74), (73, 75), (73, 76), (74, 75), (75, 76), (76, 77), (77, 78), (78, 80), (79, 80), (79, 81), (79, 82), (80, 81), (81, 82), (82, 83), (83, 84), (84, 86), (85, 86), (85, 87), (86, 87), (87, 88), (88, 89), (89, 91), (90, 91), (90, 92), (90, 99), (91, 93), (92, 93), (92, 94), (92, 98), (93, 95), (94, 95), (94, 96), (94, 97), (95, 96), (95, 122), (96, 97), (97, 98), (98, 100), (99, 100), (99, 101), (99, 111), (100, 102), (101, 102), (101, 103), (101, 110), (102, 104), (103, 104), (103, 105), (103, 106), (104, 105), (105, 107), (106, 107), (106, 108), (106, 109), (107, 108), (108, 109), (109, 110), (110, 111), (111, 113), (112, 113), (112, 114), (112, 128), (113, 115), (114, 115), (114, 116), (114, 117), (115, 116), (115, 136), (116, 118), (117, 118), (117, 119), (117, 120), (117, 121), (118, 119), (119, 120), (120, 122), (121, 122), (121, 123), (121, 124), (121, 125), (122, 123), (123, 124), (124, 126), (125, 126), (125, 127), (126, 127), (127, 128), (128, 130), (129, 130), (129, 131), (129, 153), (130, 132), (131, 132), (131, 133), (131, 134), (131, 135), (132, 133), (133, 134), (134, 136), (135, 136), (135, 137), (135, 138), (135, 139), (136, 137), (137, 138), (138, 140), (139, 140), (139, 141), (139, 142), (139, 143), (139, 152), (140, 141), (141, 142), (142, 144), (143, 144), (143, 145), (143, 146), (143, 149), (144, 145), (145, 147), (146, 147), (146, 148), (147, 148), (148, 150), (149, 150), (149, 151), (150, 151), (151, 152), (152, 153), (153, 154), (154, 156), (155, 156), (155, 157), (155, 158), (155, 162), (155, 163), (156, 157), (157, 160), (158, 159), (158, 161), (159, 160), (160, 161), (161, 162), (161, 172), (162, 164), (163, 164), (163, 165), (163, 175), (164, 166), (165, 166), (165, 167), (165, 174), (166, 168), (167, 168), (167, 169), (167, 170), (168, 169), (169, 171), (170, 171), (170, 172), (170, 173), (171, 172), (172, 173), (172, 182), (173, 174), (174, 175), (175, 177), (176, 177), (176, 178), (176, 179), (176, 183), (176, 184), (177, 178), (178, 181), (179, 180), (179, 182), (180, 181), (181, 182), (182, 183), (182, 193), (183, 185), (184, 185), (184, 186), (184, 196), (185, 187), (186, 187), (186, 188), (186, 195), (187, 189), (188, 189), (188, 190), (188, 191), (189, 190), (190, 192), (191, 192), (191, 193), (191, 194), (192, 193), (193, 194), (193, 203), (194, 195), (195, 196), (196, 198), (197, 198), (197, 199), (197, 200), (197, 204), (197, 205), (198, 199), (199, 202), (200, 201), (200, 203), (201, 202), (202, 203), (203, 204), (203, 214), (204, 206), (205, 206), (205, 207), (205, 217), (206, 208), (207, 208), (207, 209), (207, 216), (208, 210), (209, 210), (209, 211), (209, 212), (210, 211), (211, 213), (212, 213), (212, 214), (212, 215), (213, 214), (214, 215), (215, 216), (216, 217), (217, 218)]Getting ast and token:   1%|          | 22/3000 [00:00<00:14, 209.34it/s]Getting ast and token:   2%|1         | 47/3000 [00:00<00:12, 232.48it/s]Getting ast and token:   2%|2         | 71/3000 [00:00<00:17, 169.97it/s]Getting ast and token:   3%|3         | 93/3000 [00:00<00:15, 185.66it/s]Getting ast and token:   4%|3         | 116/3000 [00:00<00:14, 198.25it/s]Getting ast and token:   5%|4         | 137/3000 [00:00<00:17, 163.07it/s]Getting ast and token:   5%|5         | 162/3000 [00:00<00:15, 185.33it/s]Getting ast and token:   6%|6         | 194/3000 [00:00<00:12, 221.70it/s]Getting ast and token:   7%|7         | 218/3000 [00:01<00:12, 225.94it/s]Getting ast and token:   8%|8         | 242/3000 [00:01<00:18, 150.10it/s]Getting ast and token:   9%|9         | 271/3000 [00:01<00:15, 178.03it/s]Getting ast and token:  10%|9         | 294/3000 [00:01<00:14, 182.07it/s]Getting ast and token:  11%|#         | 321/3000 [00:01<00:15, 174.84it/s]Getting ast and token:  12%|#1        | 353/3000 [00:01<00:12, 206.79it/s]Getting ast and token:  13%|#2        | 382/3000 [00:01<00:11, 222.73it/s]Getting ast and token:  14%|#3        | 408/3000 [00:02<00:11, 230.70it/s]Getting ast and token:  14%|#4        | 433/3000 [00:02<00:10, 235.17it/s]Getting ast and token:  15%|#5        | 458/3000 [00:02<00:14, 171.39it/s]Getting ast and token:  16%|#6        | 494/3000 [00:02<00:11, 212.02it/s]Getting ast and token:  17%|#7        | 519/3000 [00:02<00:11, 219.57it/s]Getting ast and token:  18%|#8        | 549/3000 [00:02<00:10, 230.97it/s]Getting ast and token:  19%|#9        | 575/3000 [00:02<00:11, 211.11it/s]Getting ast and token:  20%|##        | 602/3000 [00:02<00:10, 222.93it/s]Getting ast and token:  21%|##        | 626/3000 [00:03<00:14, 159.96it/s]Getting ast and token:  22%|##1       | 646/3000 [00:03<00:14, 164.94it/s]Getting ast and token:  22%|##2       | 668/3000 [00:03<00:13, 172.57it/s]Getting ast and token:  23%|##2       | 688/3000 [00:03<00:13, 171.31it/s]Getting ast and token:  24%|##3       | 710/3000 [00:03<00:12, 182.81it/s]Getting ast and token:  25%|##4       | 738/3000 [00:03<00:10, 206.40it/s]Getting ast and token:  25%|##5       | 760/3000 [00:03<00:11, 197.32it/s]Getting ast and token:  26%|##6       | 781/3000 [00:04<00:11, 197.11it/s]Getting ast and token:  27%|##6       | 802/3000 [00:04<00:18, 119.24it/s]Getting ast and token:  28%|##7       | 838/3000 [00:04<00:13, 160.74it/s]Getting ast and token:  29%|##9       | 871/3000 [00:04<00:10, 194.15it/s]Getting ast and token:  30%|##9       | 898/3000 [00:04<00:09, 211.06it/s]Getting ast and token:  31%|###1      | 931/3000 [00:04<00:08, 238.93it/s]Getting ast and token:  32%|###1      | 959/3000 [00:04<00:08, 248.78it/s]Getting ast and token:  33%|###3      | 995/3000 [00:04<00:07, 278.31it/s]Getting ast and token:  34%|###4      | 1025/3000 [00:05<00:07, 279.92it/s]Getting ast and token:  35%|###5      | 1055/3000 [00:05<00:11, 164.50it/s]Getting ast and token:  36%|###6      | 1082/3000 [00:05<00:10, 183.85it/s]Getting ast and token:  37%|###7      | 1119/3000 [00:05<00:08, 220.51it/s]Getting ast and token:  38%|###8      | 1147/3000 [00:05<00:08, 230.78it/s]Getting ast and token:  39%|###9      | 1175/3000 [00:05<00:07, 242.64it/s]Getting ast and token:  40%|####      | 1208/3000 [00:05<00:06, 263.61it/s]Getting ast and token:  41%|####1     | 1239/3000 [00:06<00:06, 273.80it/s]
raw_code:  private String buildMarkupBuilderScript(String scriptData) {
        try {
            ClassLoader parent = GroovyScriptMessageBuilder.class.getClassLoader(); 
            GroovyClassLoader loader = new GroovyClassLoader(parent);
            
            Class<?> groovyClass = loader.parseClass(TemplateBasedScriptBuilder.fromTemplateResource(scriptTemplateResource)
                                                            .withCode(scriptData)
                                                            .build());
            
            if (groovyClass == null) {
                throw new CitrusRuntimeException("Could not load groovy script!");    
            }
            
            GroovyObject groovyObject = (GroovyObject) groovyClass.newInstance();
            return (String) groovyObject.invokeMethod("run", new Object[] {});
        } catch (CompilationFailedException e) {
            throw new CitrusRuntimeException(e);
        } catch (InstantiationException e) {
            throw new CitrusRuntimeException(e);
        } catch (IllegalAccessException e) {
            throw new CitrusRuntimeException(e);
        }
    }
leaves:  [3, 4, 6, 7, 10, 12, 13, 14, 16, 18, 20, 22, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 44, 46, 47, 48, 49, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 100, 102, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 166, 168, 169, 171, 172, 173, 174, 175, 177, 178, 181, 182, 183, 185, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 208, 210, 211, 213, 214, 215, 216, 217, 218]
914 th code of T:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
[(0, 1), (0, 8), (0, 19), (1, 2), (1, 4), (1, 5), (1, 7), (2, 3), (5, 6), (8, 9), (9, 10), (9, 11), (9, 14), (9, 15), (9, 18), (11, 12), (11, 13), (15, 16), (15, 17), (19, 20), (19, 21), (19, 34), (21, 22), (21, 23), (21, 33), (23, 24), (23, 25), (25, 26), (25, 27), (25, 28), (25, 29), (25, 30), (25, 31), (25, 32)]
914 th code of sast T:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
[(0, 1), (0, 8), (0, 19), (1, 2), (1, 4), (1, 5), (1, 7), (2, 3), (3, 4), (4, 6), (5, 6), (6, 7), (7, 10), (8, 9), (9, 10), (9, 11), (9, 14), (9, 15), (9, 18), (10, 12), (11, 12), (11, 13), (12, 13), (13, 14), (13, 29), (14, 16), (15, 16), (15, 17), (16, 17), (17, 18), (17, 31), (18, 20), (19, 20), (19, 21), (19, 34), (20, 22), (21, 22), (21, 23), (21, 33), (22, 24), (23, 24), (23, 25), (24, 26), (25, 26), (25, 27), (25, 28), (25, 29), (25, 30), (25, 31), (25, 32), (26, 27), (27, 28), (28, 29), (29, 30), (30, 31), (31, 32), (32, 33), (33, 34)]
raw_code:  public Long getLongAttribute(String name, Long defaultValue) {
        return getValue(longAttributes, name, defaultValue);
    }
leaves:  [3, 4, 6, 7, 10, 12, 13, 14, 16, 17, 18, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34]
1268 th code of T:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
[(0, 1), (0, 8), (0, 19), (1, 2), (1, 4), (1, 5), (1, 7), (2, 3), (5, 6), (8, 9), (9, 10), (9, 11), (9, 14), (9, 15), (9, 18), (11, 12), (11, 13), (15, 16), (15, 17), (19, 20), (19, 21), (19, 34), (21, 22), (21, 23), (21, 33), (23, 24), (23, 25), (25, 26), (25, 27), (25, 28), (25, 29), (25, 30), (25, 31), (25, 32)]
1268 th code of sast T:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
Getting ast and token:  42%|####2     | 1269/3000 [00:06<00:06, 268.26it/s]Getting ast and token:  43%|####3     | 1298/3000 [00:06<00:06, 270.20it/s]Getting ast and token:  44%|####4     | 1331/3000 [00:06<00:05, 284.36it/s]Getting ast and token:  45%|####5     | 1361/3000 [00:06<00:10, 157.95it/s]Getting ast and token:  47%|####6     | 1400/3000 [00:06<00:08, 197.78it/s]Getting ast and token:  48%|####7     | 1432/3000 [00:07<00:07, 222.51it/s]Getting ast and token:  49%|####8     | 1467/3000 [00:07<00:06, 242.70it/s]Getting ast and token:  50%|####9     | 1499/3000 [00:07<00:05, 259.14it/s]Getting ast and token:  51%|#####1    | 1530/3000 [00:07<00:05, 271.72it/s]Getting ast and token:  52%|#####2    | 1560/3000 [00:07<00:05, 271.57it/s]Getting ast and token:  53%|#####3    | 1590/3000 [00:07<00:05, 260.23it/s]Getting ast and token:  54%|#####3    | 1618/3000 [00:07<00:05, 259.87it/s]Getting ast and token:  55%|#####5    | 1652/3000 [00:07<00:04, 279.38it/s]Getting ast and token:  56%|#####6    | 1686/3000 [00:07<00:04, 295.14it/s]Getting ast and token:  57%|#####7    | 1717/3000 [00:08<00:07, 169.44it/s]Getting ast and token:  58%|#####8    | 1746/3000 [00:08<00:06, 190.69it/s]Getting ast and token:  59%|#####9    | 1772/3000 [00:08<00:06, 201.43it/s]Getting ast and token:  60%|######    | 1803/3000 [00:08<00:05, 224.87it/s]Getting ast and token:  61%|######1   | 1839/3000 [00:08<00:04, 256.30it/s]Getting ast and token:  62%|######2   | 1869/3000 [00:08<00:04, 263.31it/s]Getting ast and token:  63%|######3   | 1898/3000 [00:08<00:04, 254.36it/s]Getting ast and token:  64%|######4   | 1932/3000 [00:08<00:03, 276.77it/s]Getting ast and token:  65%|######5   | 1962/3000 [00:09<00:04, 257.67it/s]Getting ast and token:  66%|######6   | 1990/3000 [00:09<00:03, 262.26it/s]Getting ast and token:  68%|######7   | 2026/3000 [00:09<00:03, 286.32it/s]Getting ast and token:  69%|######8   | 2058/3000 [00:09<00:03, 292.43it/s]Getting ast and token:  70%|######9   | 2088/3000 [00:09<00:03, 291.40it/s]Getting ast and token:  71%|#######   | 2118/3000 [00:10<00:06, 130.16it/s]Getting ast and token:  72%|#######1  | 2146/3000 [00:10<00:05, 152.34it/s]Getting ast and token:  73%|#######2  | 2182/3000 [00:10<00:04, 188.67it/s]Getting ast and token:  74%|#######3  | 2212/3000 [00:10<00:03, 210.32it/s]Getting ast and token:  75%|#######4  | 2248/3000 [00:10<00:03, 243.42it/s]Getting ast and token:  76%|#######5  | 2279/3000 [00:10<00:02, 249.35it/s]Getting ast and token:  77%|#######6  | 2309/3000 [00:10<00:02, 256.75it/s]Getting ast and token:  78%|#######7  | 2338/3000 [00:10<00:02, 258.22it/s]Getting ast and token:  79%|#######8  | 2368/3000 [00:10<00:02, 266.62it/s]Getting ast and token:  80%|########  | 2401/3000 [00:11<00:02, 283.30it/s]Getting ast and token:  81%|########1 | 2436/3000 [00:11<00:01, 300.45it/s]Getting ast and token:  82%|########2 | 2468/3000 [00:11<00:01, 280.11it/s]Getting ast and token:  83%|########3 | 2498/3000 [00:11<00:01, 285.32it/s]Getting ast and token:  84%|########4 | 2534/3000 [00:11<00:01, 298.98it/s]Getting ast and token:  86%|########5 | 2569/3000 [00:11<00:01, 312.58it/s]Getting ast and token:  87%|########6 | 2601/3000 [00:11<00:01, 307.09it/s]Getting ast and token:  88%|########7 | 2633/3000 [00:12<00:02, 127.74it/s]Getting ast and token:  89%|########8 | 2662/3000 [00:12<00:02, 150.83it/s]Getting ast and token:  90%|########9 | 2696/3000 [00:12<00:01, 182.56it/s]Getting ast and token:  91%|######### | 2724/3000 [00:12<00:01, 197.00it/s]Getting ast and token:  92%|#########2| 2769/3000 [00:12<00:00, 250.11it/s]Getting ast and token:  93%|#########3| 2802/3000 [00:12<00:00, 267.74it/s]Getting ast and token:  94%|#########4| 2835/3000 [00:12<00:00, 270.73it/s]Getting ast and token:  96%|#########5| 2866/3000 [00:13<00:00, 255.17it/s]Getting ast and token:  97%|#########6| 2898/3000 [00:13<00:00, 268.96it/s]Getting ast and token:  98%|#########7| 2929/3000 [00:13<00:00, 276.51it/s]Getting ast and token:  99%|#########8| 2961/3000 [00:13<00:00, 281.75it/s]Getting ast and token: 100%|#########9| 2991/3000 [00:13<00:00, 285.51it/s]Getting ast and token: 100%|##########| 3000/3000 [00:13<00:00, 222.04it/s][(0, 1), (0, 8), (0, 19), (1, 2), (1, 4), (1, 5), (1, 7), (2, 3), (3, 4), (4, 6), (5, 6), (6, 7), (6, 24), (7, 10), (8, 9), (9, 10), (9, 11), (9, 14), (9, 15), (9, 18), (10, 12), (11, 12), (11, 13), (12, 13), (13, 14), (13, 27), (14, 16), (15, 16), (15, 17), (16, 17), (17, 18), (17, 29), (18, 20), (19, 20), (19, 21), (19, 34), (20, 22), (21, 22), (21, 23), (21, 33), (22, 24), (23, 24), (23, 25), (24, 26), (25, 26), (25, 27), (25, 28), (25, 29), (25, 30), (25, 31), (25, 32), (26, 27), (27, 28), (28, 29), (29, 30), (30, 31), (31, 32), (32, 33), (33, 34)]
raw_code:  public SecureCharArray generatePassword(CharSequence masterPassword, String inputText) {
        return generatePassword(masterPassword, inputText, null);
    }
leaves:  [3, 4, 6, 7, 10, 12, 13, 14, 16, 17, 18, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34]
example length: 3000
ast list length 3000
tokens list length 3000
tokens 348: 
{4: '@', 5: 'Override', 6: 'public', 7: 'void', 9: 'writeHeader', 10: '', 13: '(', 15: 'OutputStream', 16: 'os', 17: ')', 18: 'throws', 19: 'IOException', 21: '{', 24: 'os', 25: '.', 26: 'write', 28: '(', 30: 'ascii', 32: '(', 35: '"Content-Type: "', 36: '+', 37: 'mime', 38: '+', 39: '"\\r\\n"', 40: ')', 41: ')', 42: ';', 45: 'os', 46: '.', 47: 'write', 49: '(', 51: 'ascii', 53: '(', 56: '"Content-Length: "', 57: '+', 59: 'String', 60: '.', 61: 'valueOf', 63: '(', 65: 'content', 66: '.', 67: 'length', 68: ')', 69: '+', 70: '"\\r\\n"', 71: ')', 72: ')', 73: ';', 74: '}'}
tokens type 348: 
{4: '@', 5: 'identifier', 6: 'public', 7: 'void_type', 9: 'identifier', 10: ';', 13: '(', 15: 'type_identifier', 16: 'identifier', 17: ')', 18: 'throws', 19: 'identifier', 21: '{', 24: 'identifier', 25: '.', 26: 'identifier', 28: '(', 30: 'identifier', 32: '(', 35: 'string_literal', 36: '+', 37: 'identifier', 38: '+', 39: 'string_literal', 40: ')', 41: ')', 42: ';', 45: 'identifier', 46: '.', 47: 'identifier', 49: '(', 51: 'identifier', 53: '(', 56: 'string_literal', 57: '+', 59: 'identifier', 60: '.', 61: 'identifier', 63: '(', 65: 'identifier', 66: '.', 67: 'identifier', 68: ')', 69: '+', 70: 'string_literal', 71: ')', 72: ')', 73: ';', 74: '}'}
tokens 0: 

06/23/2022 02:45:14 - INFO - __main__ -   Obtain subtokens
{3: 'private', 4: 'String', 6: 'buildMarkupBuilderScript', 7: '', 10: '(', 12: 'String', 13: 'scriptData', 14: ')', 16: '{', 18: 'try', 20: '{', 22: 'ClassLoader', 24: 'parent', 25: '=', 28: 'GroovyScriptMessageBuilder', 29: '.', 30: 'class', 31: '.', 32: 'getClassLoader', 34: '(', 35: ')', 36: ';', 38: 'GroovyClassLoader', 40: 'loader', 41: '=', 43: 'new', 44: 'GroovyClassLoader', 46: '(', 47: 'parent', 48: ')', 49: ';', 52: 'Class', 54: '<', 56: '?', 57: '>', 59: 'groovyClass', 60: '=', 62: 'loader', 63: '.', 64: 'parseClass', 66: '(', 70: 'TemplateBasedScriptBuilder', 71: '.', 72: 'fromTemplateResource', 74: '(', 75: 'scriptTemplateResource', 76: ')', 77: '.', 78: 'withCode', 80: '(', 81: 'scriptData', 82: ')', 83: '.', 84: 'build', 86: '(', 87: ')', 88: ')', 89: ';', 91: 'if', 93: '(', 95: 'groovyClass', 96: '==', 97: 'null', 98: ')', 100: '{', 102: 'throw', 104: 'new', 105: 'CitrusRuntimeException', 107: '(', 108: '"Could not load groovy script!"', 109: ')', 110: ';', 111: '}', 113: 'GroovyObject', 115: 'groovyObject', 116: '=', 118: '(', 119: 'GroovyObject', 120: ')', 122: 'groovyClass', 123: '.', 124: 'newInstance', 126: '(', 127: ')', 128: ';', 130: 'return', 132: '(', 133: 'String', 134: ')', 136: 'groovyObject', 137: '.', 138: 'invokeMethod', 140: '(', 141: '"run"', 142: ',', 144: 'new', 145: 'Object', 147: '[', 148: ']', 150: '{', 151: '}', 152: ')', 153: ';', 154: '}', 156: 'catch', 157: '(', 160: 'CompilationFailedException', 161: 'e', 162: ')', 164: '{', 166: 'throw', 168: 'new', 169: 'CitrusRuntimeException', 171: '(', 172: 'e', 173: ')', 174: ';', 175: '}', 177: 'catch', 178: '(', 181: 'InstantiationException', 182: 'e', 183: ')', 185: '{', 187: 'throw', 189: 'new', 190: 'CitrusRuntimeException', 192: '(', 193: 'e', 194: ')', 195: ';', 196: '}', 198: 'catch', 199: '(', 202: 'IllegalAccessException', 203: 'e', 204: ')', 206: '{', 208: 'throw', 210: 'new', 211: 'CitrusRuntimeException', 213: '(', 214: 'e', 215: ')', 216: ';', 217: '}', 218: '}'}
tokens type 0: 
{3: 'private', 4: 'type_identifier', 6: 'identifier', 7: ';', 10: '(', 12: 'type_identifier', 13: 'identifier', 14: ')', 16: '{', 18: 'try', 20: '{', 22: 'type_identifier', 24: 'identifier', 25: '=', 28: 'identifier', 29: '.', 30: 'identifier', 31: '.', 32: 'identifier', 34: '(', 35: ')', 36: ';', 38: 'type_identifier', 40: 'identifier', 41: '=', 43: 'new', 44: 'type_identifier', 46: '(', 47: 'identifier', 48: ')', 49: ';', 52: 'type_identifier', 54: '<', 56: '?', 57: '>', 59: 'identifier', 60: '=', 62: 'identifier', 63: '.', 64: 'identifier', 66: '(', 70: 'identifier', 71: '.', 72: 'identifier', 74: '(', 75: 'identifier', 76: ')', 77: '.', 78: 'identifier', 80: '(', 81: 'identifier', 82: ')', 83: '.', 84: 'identifier', 86: '(', 87: ')', 88: ')', 89: ';', 91: 'if', 93: '(', 95: 'identifier', 96: '==', 97: 'null_literal', 98: ')', 100: '{', 102: 'throw', 104: 'new', 105: 'type_identifier', 107: '(', 108: 'string_literal', 109: ')', 110: ';', 111: '}', 113: 'type_identifier', 115: 'identifier', 116: '=', 118: '(', 119: 'type_identifier', 120: ')', 122: 'identifier', 123: '.', 124: 'identifier', 126: '(', 127: ')', 128: ';', 130: 'return', 132: '(', 133: 'type_identifier', 134: ')', 136: 'identifier', 137: '.', 138: 'identifier', 140: '(', 141: 'string_literal', 142: ',', 144: 'new', 145: 'type_identifier', 147: '[', 148: ']', 150: '{', 151: '}', 152: ')', 153: ';', 154: '}', 156: 'catch', 157: '(', 160: 'type_identifier', 161: 'identifier', 162: ')', 164: '{', 166: 'throw', 168: 'new', 169: 'type_identifier', 171: '(', 172: 'identifier', 173: ')', 174: ';', 175: '}', 177: 'catch', 178: '(', 181: 'type_identifier', 182: 'identifier', 183: ')', 185: '{', 187: 'throw', 189: 'new', 190: 'type_identifier', 192: '(', 193: 'identifier', 194: ')', 195: ';', 196: '}', 198: 'catch', 199: '(', 202: 'type_identifier', 203: 'identifier', 204: ')', 206: '{', 208: 'throw', 210: 'new', 211: 'type_identifier', 213: '(', 214: 'identifier', 215: ')', 216: ';', 217: '}', 218: '}'}
Computing subtokens:   0%|          | 0/30 [00:00<?, ?it/s]Computing subtokens:   3%|3         | 1/30 [00:00<00:23,  1.23it/s]Computing subtokens:   7%|6         | 2/30 [00:01<00:17,  1.64it/s]Computing subtokens:  10%|#         | 3/30 [00:01<00:14,  1.82it/s]