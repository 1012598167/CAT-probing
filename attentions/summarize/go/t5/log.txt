06/06/2022 05:35:34 - WARNING - configs -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False, cpu count: 48
06/06/2022 05:35:34 - INFO - __main__ -   Namespace(adam_epsilon=1e-08, add_lang_ids=False, add_task_prefix=False, always_save_model=True, attention_batch_size=100, batch_size=32, beam_size=10, cache_path='save_models/summarize/go/t5/cache_data', cpu_count=48, data_dir='/data/pretrain-attention/CodeAttention/data', data_num=-1, device=device(type='cuda'), do_eval=True, do_eval_bleu=True, do_test=True, do_train=True, gpu=0, gradient_accumulation_steps=1, local_rank=-1, lr=5e-05, max_grad_norm=1.0, max_source_length=256, max_target_length=128, model_dir='saved_models', model_name='t5', n_gpu=1, no_cuda=False, num_train_epochs=15, output_dir='save_models/summarize/go/t5', patience=2, res_dir='results/summarize/go/t5', res_fn='results/summarize/go/t5.txt', save_last_checkpoints=True, seed=1234, start_epoch=0, sub_task='go', summary_dir='tensorboard', task='summarize', warmup_steps=1000, weight_decay=0.0)
06/06/2022 05:35:37 - INFO - models -   Finish loading model [223M] parameters from t5
06/06/2022 05:35:52 - INFO - utils -   Read 3000 examples, avg src len: 88, avg trg len: 15, max src len: 509, max trg len: 157
06/06/2022 05:35:52 - INFO - utils -   Sample 5k data for computing bleu/attention from /data/pretrain-attention/CodeAttention/data/summarize/go/train.jsonl
  0%|          | 0/3000 [00:00<?, ?it/s]  4%|4         | 128/3000 [00:00<00:02, 1218.79it/s] 11%|#1        | 336/3000 [00:00<00:01, 1675.78it/s] 17%|#6        | 504/3000 [00:00<00:01, 1461.92it/s] 22%|##1       | 656/3000 [00:00<00:01, 1446.13it/s] 30%|##9       | 896/3000 [00:00<00:01, 1734.58it/s] 38%|###8      | 1152/3000 [00:00<00:00, 1977.84it/s] 45%|####5     | 1353/3000 [00:00<00:00, 1875.02it/s] 53%|#####3    | 1600/3000 [00:00<00:00, 2029.19it/s] 63%|######2   | 1888/3000 [00:00<00:00, 2258.94it/s] 71%|#######   | 2128/3000 [00:01<00:00, 2279.65it/s] 79%|#######8  | 2358/3000 [00:01<00:00, 2259.87it/s] 87%|########6 | 2608/3000 [00:01<00:00, 2302.55it/s] 97%|#########6| 2896/3000 [00:01<00:00, 2465.48it/s]100%|##########| 3000/3000 [00:01<00:00, 2074.99it/s]
06/06/2022 05:35:53 - INFO - __main__ -   Parse AST trees and obtain leaf tokens
  0%|          | 0/3000 [00:00<?, ?it/s]leaf:  2 start:  (0, 0) , end:  (0, 4) , token:  func
leaf:  3 start:  (0, 5) , end:  (0, 19) , token:  DurationString
leaf:  5 start:  (0, 19) , end:  (0, 20) , token:  (
leaf:  7 start:  (0, 20) , end:  (0, 21) , token:  d
leaf:  9 start:  (0, 22) , end:  (0, 26) , token:  time
leaf:  10 start:  (0, 26) , end:  (0, 27) , token:  .
leaf:  11 start:  (0, 27) , end:  (0, 35) , token:  Duration
leaf:  12 start:  (0, 35) , end:  (0, 36) , token:  )
leaf:  13 start:  (0, 37) , end:  (0, 43) , token:  string
leaf:  15 start:  (0, 44) , end:  (0, 45) , token:  {
leaf:  18 start:  (1, 1) , end:  (1, 5) , token:  sign
leaf:  19 start:  (1, 6) , end:  (1, 8) , token:  :=
leaf:  21 start:  (1, 9) , end:  (1, 10) , token:  1
leaf:  22 start:  (1, 10) , end:  (2, 0) , token:  
leaf:  24 start:  (2, 1) , end:  (2, 3) , token:  if
leaf:  26 start:  (2, 4) , end:  (2, 5) , token:  d
leaf:  27 start:  (2, 6) , end:  (2, 7) , token:  <
leaf:  28 start:  (2, 8) , end:  (2, 9) , token:  0
leaf:  30 start:  (2, 10) , end:  (2, 11) , token:  {
leaf:  33 start:  (3, 2) , end:  (3, 6) , token:  sign
leaf:  34 start:  (3, 7) , end:  (3, 8) , token:  =
leaf:  37 start:  (3, 9) , end:  (3, 10) , token:  -
leaf:  38 start:  (3, 10) , end:  (3, 11) , token:  1
leaf:  39 start:  (3, 11) , end:  (4, 0) , token:  
leaf:  42 start:  (4, 2) , end:  (4, 3) , token:  d
leaf:  43 start:  (4, 4) , end:  (4, 5) , token:  =
leaf:  46 start:  (4, 6) , end:  (4, 7) , token:  -
leaf:  47 start:  (4, 7) , end:  (4, 8) , token:  d
leaf:  48 start:  (4, 8) , end:  (5, 0) , token:  
leaf:  49 start:  (5, 1) , end:  (5, 2) , token:  }
leaf:  50 start:  (5, 2) , end:  (6, 0) , token:  
leaf:  53 start:  (6, 1) , end:  (6, 3) , token:  ns
leaf:  54 start:  (6, 4) , end:  (6, 6) , token:  :=
leaf:  57 start:  (6, 7) , end:  (6, 10) , token:  int
leaf:  59 start:  (6, 10) , end:  (6, 11) , token:  (
leaf:  61 start:  (6, 11) , end:  (6, 12) , token:  d
leaf:  62 start:  (6, 13) , end:  (6, 14) , token:  %
leaf:  63 start:  (6, 15) , end:  (6, 18) , token:  1e9
leaf:  64 start:  (6, 18) , end:  (6, 19) , token:  )
leaf:  65 start:  (6, 19) , end:  (7, 0) , token:  
leaf:  68 start:  (7, 1) , end:  (7, 2) , token:  d
leaf:  69 start:  (7, 3) , end:  (7, 5) , token:  /=
leaf:  71 start:  (7, 6) , end:  (7, 9) , token:  1e9
leaf:  72 start:  (7, 9) , end:  (8, 0) , token:  
leaf:  75 start:  (8, 1) , end:  (8, 4) , token:  sec
leaf:  76 start:  (8, 5) , end:  (8, 7) , token:  :=
leaf:  79 start:  (8, 8) , end:  (8, 11) , token:  int
leaf:  81 start:  (8, 11) , end:  (8, 12) , token:  (
leaf:  83 start:  (8, 12) , end:  (8, 13) , token:  d
leaf:  84 start:  (8, 14) , end:  (8, 15) , token:  %
leaf:  85 start:  (8, 16) , end:  (8, 18) , token:  60
leaf:  86 start:  (8, 18) , end:  (8, 19) , token:  )
leaf:  87 start:  (8, 19) , end:  (9, 0) , token:  
leaf:  90 start:  (9, 1) , end:  (9, 2) , token:  d
leaf:  91 start:  (9, 3) , end:  (9, 5) , token:  /=
leaf:  93 start:  (9, 6) , end:  (9, 8) , token:  60
leaf:  94 start:  (9, 8) , end:  (10, 0) , token:  
leaf:  97 start:  (10, 1) , end:  (10, 4) , token:  min
leaf:  98 start:  (10, 5) , end:  (10, 7) , token:  :=
leaf:  101 start:  (10, 8) , end:  (10, 11) , token:  int
leaf:  103 start:  (10, 11) , end:  (10, 12) , token:  (
leaf:  105 start:  (10, 12) , end:  (10, 13) , token:  d
leaf:  106 start:  (10, 14) , end:  (10, 15) , token:  %
leaf:  107 start:  (10, 16) , end:  (10, 18) , token:  60
leaf:  108 start:  (10, 18) , end:  (10, 19) , token:  )
leaf:  109 start:  (10, 19) , end:  (11, 0) , token:  
leaf:  112 start:  (11, 1) , end:  (11, 5) , token:  hour
leaf:  113 start:  (11, 6) , end:  (11, 8) , token:  :=
leaf:  117 start:  (11, 9) , end:  (11, 12) , token:  int
leaf:  119 start:  (11, 12) , end:  (11, 13) , token:  (
leaf:  121 start:  (11, 13) , end:  (11, 14) , token:  d
leaf:  122 start:  (11, 14) , end:  (11, 15) , token:  /
leaf:  123 start:  (11, 15) , end:  (11, 17) , token:  60
leaf:  124 start:  (11, 17) , end:  (11, 18) , token:  )
leaf:  125 start:  (11, 19) , end:  (11, 20) , token:  *
leaf:  126 start:  (11, 21) , end:  (11, 25) , token:  sign
leaf:  127 start:  (11, 25) , end:  (12, 0) , token:  
leaf:  129 start:  (12, 1) , end:  (12, 3) , token:  if
leaf:  131 start:  (12, 4) , end:  (12, 6) , token:  ns
leaf:  132 start:  (12, 7) , end:  (12, 9) , token:  ==
leaf:  133 start:  (12, 10) , end:  (12, 11) , token:  0
leaf:  135 start:  (12, 12) , end:  (12, 13) , token:  {
leaf:  137 start:  (13, 2) , end:  (13, 8) , token:  return
leaf:  141 start:  (13, 9) , end:  (13, 12) , token:  fmt
leaf:  142 start:  (13, 12) , end:  (13, 13) , token:  .
leaf:  143 start:  (13, 13) , end:  (13, 20) , token:  Sprintf
leaf:  145 start:  (13, 20) , end:  (13, 21) , token:  (
leaf:  147 start:  (13, 21) , end:  (13, 22) , token:  "
leaf:  148 start:  (13, 34) , end:  (13, 35) , token:  "
leaf:  149 start:  (13, 35) , end:  (13, 36) , token:  ,
leaf:  150 start:  (13, 37) , end:  (13, 41) , token:  hour
leaf:  151 start:  (13, 41) , end:  (13, 42) , token:  ,
leaf:  152 start:  (13, 43) , end:  (13, 46) , token:  min
leaf:  153 start:  (13, 46) , end:  (13, 47) , token:  ,
leaf:  154 start:  (13, 48) , end:  (13, 51) , token:  sec
leaf:  155 start:  (13, 51) , end:  (13, 52) , token:  )
leaf:  156 start:  (13, 52) , end:  (14, 0) , token:  
leaf:  157 start:  (14, 1) , end:  (14, 2) , token:  }
leaf:  158 start:  (14, 2) , end:  (15, 0) , token:  
leaf:  160 start:  (15, 1) , end:  (15, 7) , token:  return
leaf:  164 start:  (15, 8) , end:  (15, 11) , token:  fmt
leaf:  165 start:  (15, 11) , end:  (15, 12) , token:  .
leaf:  166 start:  (15, 12) , end:  (15, 19) , token:  Sprintf
leaf:  168 start:  (15, 19) , end:  (15, 20) , token:  (
leaf:  170 start:  (15, 20) , end:  (15, 21) , token:  "
leaf:  171 start:  (15, 38) , end:  (15, 39) , token:  "
leaf:  172 start:  (15, 39) , end:  (15, 40) , token:  ,
leaf:  173 start:  (15, 41) , end:  (15, 45) , token:  hour
leaf:  174 start:  (15, 45) , end:  (15, 46) , token:  ,
leaf:  175 start:  (15, 47) , end:  (15, 50) , token:  min
leaf:  176 start:  (15, 50) , end:  (15, 51) , token:  ,
leaf:  177 start:  (15, 52) , end:  (15, 55) , token:  sec
leaf:  178 start:  (15, 55) , end:  (15, 56) , token:  ,
leaf:  179 start:  (15, 57) , end:  (15, 59) , token:  ns
leaf:  180 start:  (15, 59) , end:  (15, 60) , token:  )
leaf:  181 start:  (15, 60) , end:  (16, 0) , token:  
leaf:  182 start:  (16, 0) , end:  (16, 1) , token:  }
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]
[(0, 1), (1, 2), (1, 3), (1, 4), (1, 13), (1, 14), (4, 5), (4, 6), (4, 12), (6, 7), (6, 8), (8, 9), (8, 10), (8, 11), (14, 15), (14, 16), (14, 22), (14, 23), (14, 50), (14, 51), (14, 65), (14, 66), (14, 72), (14, 73), (14, 87), (14, 88), (14, 94), (14, 95), (14, 109), (14, 110), (14, 127), (14, 128), (14, 158), (14, 159), (14, 181), (14, 182), (16, 17), (16, 19), (16, 20), (17, 18), (20, 21), (23, 24), (23, 25), (23, 29), (25, 26), (25, 27), (25, 28), (29, 30), (29, 31), (29, 39), (29, 40), (29, 48), (29, 49), (31, 32), (31, 34), (31, 35), (32, 33), (35, 36), (36, 37), (36, 38), (40, 41), (40, 43), (40, 44), (41, 42), (44, 45), (45, 46), (45, 47), (51, 52), (51, 54), (51, 55), (52, 53), (55, 56), (56, 57), (56, 58), (58, 59), (58, 60), (58, 64), (60, 61), (60, 62), (60, 63), (66, 67), (66, 69), (66, 70), (67, 68), (70, 71), (73, 74), (73, 76), (73, 77), (74, 75), (77, 78), (78, 79), (78, 80), (80, 81), (80, 82), (80, 86), (82, 83), (82, 84), (82, 85), (88, 89), (88, 91), (88, 92), (89, 90), (92, 93), (95, 96), (95, 98), (95, 99), (96, 97), (99, 100), (100, 101), (100, 102), (102, 103), (102, 104), (102, 108), (104, 105), (104, 106), (104, 107), (110, 111), (110, 113), (110, 114), (111, 112), (114, 115), (115, 116), (115, 125), (115, 126), (116, 117), (116, 118), (118, 119), (118, 120), (118, 124), (120, 121), (120, 122), (120, 123), (128, 129), (128, 130), (128, 134), (130, 131), (130, 132), (130, 133), (134, 135), (134, 136), (134, 156), (134, 157), (136, 137), (136, 138), (138, 139), (139, 140), (139, 144), (140, 141), (140, 142), (140, 143), (144, 145), (144, 146), (144, 149), (144, 150), (144, 151), (144, 152), (144, 153), (144, 154), (144, 155), (146, 147), (146, 148), (159, 160), (159, 161), (161, 162), (162, 163), (162, 167), (163, 164), (163, 165), (163, 166), (167, 168), (167, 169), (167, 172), (167, 173), (167, 174), (167, 175), (167, 176), (167, 177), (167, 178), (167, 179), (167, 180), (169, 170), (169, 171)]  2%|1         | 50/3000 [00:00<00:05, 494.36it/s]  4%|3         | 105/3000 [00:00<00:05, 525.39it/s]  5%|5         | 161/3000 [00:00<00:05, 474.63it/s]  7%|7         | 211/3000 [00:00<00:05, 483.31it/s]  9%|8         | 260/3000 [00:00<00:05, 477.56it/s] 10%|#         | 309/3000 [00:00<00:05, 459.75it/s] 12%|#1        | 356/3000 [00:00<00:06, 403.52it/s] 13%|#3        | 401/3000 [00:00<00:06, 414.40it/s] 15%|#5        | 451/3000 [00:01<00:05, 437.08it/s] 17%|#6        | 496/3000 [00:01<00:06, 359.09it/s] 18%|#7        | 536/3000 [00:01<00:06, 368.96it/s] 20%|#9        | 596/3000 [00:01<00:05, 427.59it/s] 22%|##1       | 649/3000 [00:01<00:05, 453.80it/s] 23%|##3       | 697/3000 [00:01<00:06, 370.09it/s] 25%|##4       | 742/3000 [00:01<00:05, 388.32it/s] 26%|##6       | 790/3000 [00:01<00:05, 409.85it/s] 28%|##8       | 841/3000 [00:01<00:04, 436.09it/s] 30%|##9       | 890/3000 [00:02<00:04, 450.68it/s] 31%|###1      | 937/3000 [00:02<00:04, 453.40it/s] 33%|###2      | 984/3000 [00:02<00:05, 371.31it/s] 34%|###4      | 1028/3000 [00:02<00:05, 387.62it/s] 36%|###5      | 1070/3000 [00:02<00:04, 390.35it/s] 37%|###7      | 1118/3000 [00:02<00:04, 414.41it/s] 39%|###8      | 1161/3000 [00:02<00:04, 407.79it/s] 40%|####      | 1203/3000 [00:02<00:04, 400.71it/s] 42%|####1     | 1254/3000 [00:02<00:04, 427.25it/s] 43%|####3     | 1298/3000 [00:03<00:05, 315.40it/s] 44%|####4     | 1335/3000 [00:03<00:05, 313.69it/s] 46%|####6     | 1383/3000 [00:03<00:04, 350.65it/s] 48%|####7     | 1429/3000 [00:03<00:04, 378.16it/s] 49%|####9     | 1477/3000 [00:03<00:03, 403.43it/s] 51%|#####     | 1523/3000 [00:03<00:03, 414.19it/s] 52%|#####2    | 1568/3000 [00:03<00:03, 423.42it/s] 54%|#####4    | 1624/3000 [00:04<00:03, 344.19it/s] 56%|#####5    | 1679/3000 [00:04<00:03, 389.94it/s] 57%|#####7    | 1722/3000 [00:04<00:03, 381.48it/s] 59%|#####8    | 1763/3000 [00:04<00:03, 375.53it/s] 60%|######    | 1806/3000 [00:04<00:03, 388.73it/s] 62%|######1   | 1855/3000 [00:04<00:02, 409.45it/s] 63%|######3   | 1898/3000 [00:04<00:02, 400.01it/s] 65%|######4   | 1939/3000 [00:04<00:02, 357.33it/s] 66%|######5   | 1978/3000 [00:04<00:02, 363.75it/s] 67%|######7   | 2016/3000 [00:05<00:02, 357.07it/s] 68%|######8   | 2053/3000 [00:05<00:04, 226.77it/s] 70%|#######   | 2100/3000 [00:05<00:03, 273.12it/s] 71%|#######1  | 2140/3000 [00:05<00:02, 299.07it/s] 73%|#######2  | 2179/3000 [00:05<00:02, 320.42it/s] 74%|#######3  | 2218/3000 [00:05<00:02, 337.82it/s] 75%|#######5  | 2262/3000 [00:05<00:02, 364.16it/s] 77%|#######7  | 2311/3000 [00:06<00:01, 398.57it/s] 78%|#######8  | 2355/3000 [00:06<00:01, 407.76it/s] 80%|########  | 2402/3000 [00:06<00:01, 423.78it/s] 82%|########1 | 2446/3000 [00:06<00:01, 383.60it/s] 83%|########2 | 2486/3000 [00:06<00:01, 333.39it/s] 84%|########4 | 2522/3000 [00:06<00:02, 207.53it/s] 85%|########5 | 2556/3000 [00:06<00:01, 230.81it/s] 86%|########6 | 2586/3000 [00:07<00:01, 236.22it/s] 87%|########7 | 2616/3000 [00:07<00:01, 249.64it/s] 88%|########8 | 2653/3000 [00:07<00:01, 278.00it/s] 90%|########9 | 2695/3000 [00:07<00:00, 313.72it/s] 92%|#########1| 2758/3000 [00:07<00:00, 394.28it/s] 94%|#########3| 2811/3000 [00:07<00:00, 431.21it/s] 95%|#########5| 2857/3000 [00:07<00:00, 437.07it/s] 97%|#########6| 2907/3000 [00:07<00:00, 451.53it/s] 98%|#########8| 2955/3000 [00:07<00:00, 448.53it/s]100%|##########| 3000/3000 [00:07<00:00, 375.05it/s]
06/06/2022 05:36:01 - INFO - __main__ -   Obtain subtokens and their attention

raw_code:  func DurationString(d time.Duration) string {
	sign := 1
	if d < 0 {
		sign = -1
		d = -d
	}
	ns := int(d % 1e9)
	d /= 1e9
	sec := int(d % 60)
	d /= 60
	min := int(d % 60)
	hour := int(d/60) * sign
	if ns == 0 {
		return fmt.Sprintf("%d:%02d:%02d", hour, min, sec)
	}
	return fmt.Sprintf("%d:%02d:%02d.%09d", hour, min, sec, ns)
}
leaves:  [2, 3, 5, 7, 9, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 26, 27, 28, 30, 33, 34, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 54, 57, 59, 61, 62, 63, 64, 65, 68, 69, 71, 72, 75, 76, 79, 81, 83, 84, 85, 86, 87, 90, 91, 93, 94, 97, 98, 101, 103, 105, 106, 107, 108, 109, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 137, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]
example length: 3000
ast list length 3000
tokens list length 3000
tokens 0: 
{2: 'func', 3: 'DurationString', 5: '(', 7: 'd', 9: 'time', 10: '.', 11: 'Duration', 12: ')', 13: 'string', 15: '{', 18: 'sign', 19: ':=', 21: '1', 22: '', 24: 'if', 26: 'd', 27: '<', 28: '0', 30: '{', 33: 'sign', 34: '=', 37: '-', 38: '1', 39: '', 42: 'd', 43: '=', 46: '-', 47: 'd', 48: '', 49: '}', 50: '', 53: 'ns', 54: ':=', 57: 'int', 59: '(', 61: 'd', 62: '%', 63: '1e9', 64: ')', 65: '', 68: 'd', 69: '/=', 71: '1e9', 72: '', 75: 'sec', 76: ':=', 79: 'int', 81: '(', 83: 'd', 84: '%', 85: '60', 86: ')', 87: '', 90: 'd', 91: '/=', 93: '60', 94: '', 97: 'min', 98: ':=', 101: 'int', 103: '(', 105: 'd', 106: '%', 107: '60', 108: ')', 109: '', 112: 'hour', 113: ':=', 117: 'int', 119: '(', 121: 'd', 122: '/', 123: '60', 124: ')', 125: '*', 126: 'sign', 127: '', 129: 'if', 131: 'ns', 132: '==', 133: '0', 135: '{', 137: 'return', 141: 'fmt', 142: '.', 143: 'Sprintf', 145: '(', 147: '"', 148: '"', 149: ',', 150: 'hour', 151: ',', 152: 'min', 153: ',', 154: 'sec', 155: ')', 156: '', 157: '}', 158: '', 160: 'return', 164: 'fmt', 165: '.', 166: 'Sprintf', 168: '(', 170: '"', 171: '"', 172: ',', 173: 'hour', 174: ',', 175: 'min', 176: ',', 177: 'sec', 178: ',', 179: 'ns', 180: ')', 181: '', 182: '}'}
tokens type 0: 
{2: 'func', 3: 'identifier', 5: '(', 7: 'identifier', 9: 'package_identifier', 10: '.', 11: 'type_identifier', 12: ')', 13: 'type_identifier', 15: '{', 18: 'identifier', 19: ':=', 21: 'int_literal', 22: '\n', 24: 'if', 26: 'identifier', 27: '<', 28: 'int_literal', 30: '{', 33: 'identifier', 34: '=', 37: '-', 38: 'int_literal', 39: '\n', 42: 'identifier', 43: '=', 46: '-', 47: 'identifier', 48: '\n', 49: '}', 50: '\n', 53: 'identifier', 54: ':=', 57: 'identifier', 59: '(', 61: 'identifier', 62: '%', 63: 'float_literal', 64: ')', 65: '\n', 68: 'identifier', 69: '/=', 71: 'float_literal', 72: '\n', 75: 'identifier', 76: ':=', 79: 'identifier', 81: '(', 83: 'identifier', 84: '%', 85: 'int_literal', 86: ')', 87: '\n', 90: 'identifier', 91: '/=', 93: 'int_literal', 94: '\n', 97: 'identifier', 98: ':=', 101: 'identifier', 103: '(', 105: 'identifier', 106: '%', 107: 'int_literal', 108: ')', 109: '\n', 112: 'identifier', 113: ':=', 117: 'identifier', 119: '(', 121: 'identifier', 122: '/', 123: 'int_literal', 124: ')', 125: '*', 126: 'identifier', 127: '\n', 129: 'if', 131: 'identifier', 132: '==', 133: 'int_literal', 135: '{', 137: 'return', 141: 'identifier', 142: '.', 143: 'field_identifier', 145: '(', 147: '"', 148: '"', 149: ',', 150: 'identifier', 151: ',', 152: 'identifier', 153: ',', 154: 'identifier', 155: ')', 156: '\n', 157: '}', 158: '\n', 160: 'return', 164: 'identifier', 165: '.', 166: 'field_identifier', 168: '(', 170: '"', 171: '"', 172: ',', 173: 'identifier', 174: ',', 175: 'identifier', 176: ',', 177: 'identifier', 178: ',', 179: 'identifier', 180: ')', 181: '\n', 182: '}'}
Computing attention:   0%|          | 0/30 [00:00<?, ?it/s]Computing attention:   3%|3         | 1/30 [00:02<00:58,  2.01s/it]Computing attention:   7%|6         | 2/30 [00:03<00:48,  1.75s/it]Computing attention:  10%|#         | 3/30 [00:05<00:45,  1.68s/it]Computing attention:  13%|#3        | 4/30 [00:06<00:43,  1.66s/it]Computing attention:  17%|#6        | 5/30 [00:08<00:39,  1.59s/it]Computing attention:  20%|##        | 6/30 [00:09<00:37,  1.56s/it]Computing attention:  23%|##3       | 7/30 [00:11<00:35,  1.53s/it]Computing attention:  27%|##6       | 8/30 [00:12<00:33,  1.52s/it]Computing attention:  30%|###       | 9/30 [00:14<00:31,  1.51s/it]Computing attention:  33%|###3      | 10/30 [00:15<00:29,  1.50s/it]Computing attention:  37%|###6      | 11/30 [00:17<00:28,  1.49s/it]Computing attention:  40%|####      | 12/30 [00:18<00:26,  1.49s/it]Computing attention:  43%|####3     | 13/30 [00:20<00:25,  1.49s/it]Computing attention:  47%|####6     | 14/30 [00:21<00:23,  1.49s/it]Computing attention:  50%|#####     | 15/30 [00:23<00:22,  1.48s/it]Computing attention:  53%|#####3    | 16/30 [00:24<00:20,  1.48s/it]Computing attention:  57%|#####6    | 17/30 [00:26<00:19,  1.48s/it]Computing attention:  60%|######    | 18/30 [00:27<00:17,  1.48s/it]Computing attention:  63%|######3   | 19/30 [00:29<00:16,  1.48s/it]Computing attention:  67%|######6   | 20/30 [00:30<00:14,  1.48s/it]Computing attention:  70%|#######   | 21/30 [00:31<00:13,  1.48s/it]Computing attention:  73%|#######3  | 22/30 [00:33<00:11,  1.48s/it]Computing attention:  77%|#######6  | 23/30 [00:34<00:10,  1.48s/it]Computing attention:  80%|########  | 24/30 [00:36<00:08,  1.48s/it]Computing attention:  83%|########3 | 25/30 [00:37<00:07,  1.48s/it]Computing attention:  87%|########6 | 26/30 [00:39<00:05,  1.48s/it]Computing attention:  90%|######### | 27/30 [00:40<00:04,  1.48s/it]Computing attention:  93%|#########3| 28/30 [00:42<00:02,  1.48s/it]Computing attention:  97%|#########6| 29/30 [00:43<00:01,  1.47s/it]Computing attention: 100%|##########| 30/30 [00:45<00:00,  1.47s/it]Computing attention: 100%|##########| 30/30 [00:45<00:00,  1.51s/it]
len(attention_list) 30
special tokens:  ['<extra_id_0>', '<extra_id_1>', '<extra_id_2>', '<extra_id_3>', '<extra_id_4>', '<extra_id_5>', '<extra_id_6>', '<extra_id_7>', '<extra_id_8>', '<extra_id_9>', '<extra_id_10>', '<extra_id_11>', '<extra_id_12>', '<extra_id_13>', '<extra_id_14>', '<extra_id_15>', '<extra_id_16>', '<extra_id_17>', '<extra_id_18>', '<extra_id_19>', '<extra_id_20>', '<extra_id_21>', '<extra_id_22>', '<extra_id_23>', '<extra_id_24>', '<extra_id_25>', '<extra_id_26>', '<extra_id_27>', '<extra_id_28>', '<extra_id_29>', '<extra_id_30>', '<extra_id_31>', '<extra_id_32>', '<extra_id_33>', '<extra_id_34>', '<extra_id_35>', '<extra_id_36>', '<extra_id_37>', '<extra_id_38>', '<extra_id_39>', '<extra_id_40>', '<extra_id_41>', '<extra_id_42>', '<extra_id_43>', '<extra_id_44>', '<extra_id_45>', '<extra_id_46>', '<extra_id_47>', '<extra_id_48>', '<extra_id_49>', '<extra_id_50>', '<extra_id_51>', '<extra_id_52>', '<extra_id_53>', '<extra_id_54>', '<extra_id_55>', '<extra_id_56>', '<extra_id_57>', '<extra_id_58>', '<extra_id_59>', '<extra_id_60>', '<extra_id_61>', '<extra_id_62>', '<extra_id_63>', '<extra_id_64>', '<extra_id_65>', '<extra_id_66>', '<extra_id_67>', '<extra_id_68>', '<extra_id_69>', '<extra_id_70>', '<extra_id_71>', '<extra_id_72>', '<extra_id_73>', '<extra_id_74>', '<extra_id_75>', '<extra_id_76>', '<extra_id_77>', '<extra_id_78>', '<extra_id_79>', '<extra_id_80>', '<extra_id_81>', '<extra_id_82>', '<extra_id_83>', '<extra_id_84>', '<extra_id_85>', '<extra_id_86>', '<extra_id_87>', '<extra_id_88>', '<extra_id_89>', '<extra_id_90>', '<extra_id_91>', '<extra_id_92>', '<extra_id_93>', '<extra_id_94>', '<extra_id_95>', '<extra_id_96>', '<extra_id_97>', '<extra_id_98>', '<extra_id_99>']
after formatting, subtokens 0:
Traceback (most recent call last):
  File "/data/pretrain-attention/CodeAttention/attention.py", line 489, in <module>
    main()
  File "/data/pretrain-attention/CodeAttention/attention.py", line 477, in main
    args, subtokens_list, tokens_list, tokens_type_list, tokenizer)
  File "/data/pretrain-attention/CodeAttention/attention.py", line 107, in number_subtoken
    print(subtokens)
UnicodeEncodeError: 'ascii' codec can't encode character '\u2581' in position 2: ordinal not in range(128)
